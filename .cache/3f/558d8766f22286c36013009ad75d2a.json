{"id":"home/work1.js","dependencies":[{"name":"G:\\FrontEnd\\Beetroot\\01_LESSON_1\\01_LESSON_1\\01_files\\package.json","includedInParent":true,"mtime":1607358615648}],"generated":{"js":"// 1. Написать функцию map, которая будет принимать в качестве\n// аргумента массив arr и функцию, которая в свою очередь будет\n// осуществлять преобразование каждого элемента массива в вид\n// \"<li class=\"list-group-item\">Tom</li>\"\n// 2. Вывести элементы трансформированного массива в ul с id=\"list\"\n// Вывод должен осуществляться в отсортированном по алфавиту виде\nvar arr = [\"Tom\", \"Steve\", \"Bill\", \"Rita\", \"Pete\", \"Ashley\"];\nvar list = document.getElementById(\"list\"); // Сигнатура map\n\nfunction map(list, fn) {// todo\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"home/work1.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"home/work1.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"home/work1.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"home/work1.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"home/work1.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"home/work1.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"home/work1.js","original":{"line":8,"column":0}},{"name":"arr","generated":{"line":7,"column":4},"source":"home/work1.js","original":{"line":8,"column":4}},{"generated":{"line":7,"column":7},"source":"home/work1.js","original":{"line":8,"column":7}},{"generated":{"line":7,"column":10},"source":"home/work1.js","original":{"line":8,"column":10}},{"generated":{"line":7,"column":11},"source":"home/work1.js","original":{"line":8,"column":11}},{"generated":{"line":7,"column":16},"source":"home/work1.js","original":{"line":8,"column":10}},{"generated":{"line":7,"column":18},"source":"home/work1.js","original":{"line":8,"column":18}},{"generated":{"line":7,"column":25},"source":"home/work1.js","original":{"line":8,"column":10}},{"generated":{"line":7,"column":27},"source":"home/work1.js","original":{"line":8,"column":27}},{"generated":{"line":7,"column":33},"source":"home/work1.js","original":{"line":8,"column":10}},{"generated":{"line":7,"column":35},"source":"home/work1.js","original":{"line":8,"column":35}},{"generated":{"line":7,"column":41},"source":"home/work1.js","original":{"line":8,"column":10}},{"generated":{"line":7,"column":43},"source":"home/work1.js","original":{"line":8,"column":43}},{"generated":{"line":7,"column":49},"source":"home/work1.js","original":{"line":8,"column":10}},{"generated":{"line":7,"column":51},"source":"home/work1.js","original":{"line":8,"column":51}},{"generated":{"line":7,"column":59},"source":"home/work1.js","original":{"line":8,"column":10}},{"generated":{"line":7,"column":60},"source":"home/work1.js","original":{"line":8,"column":0}},{"generated":{"line":8,"column":0},"source":"home/work1.js","original":{"line":9,"column":0}},{"name":"list","generated":{"line":8,"column":4},"source":"home/work1.js","original":{"line":9,"column":6}},{"generated":{"line":8,"column":8},"source":"home/work1.js","original":{"line":9,"column":10}},{"name":"document","generated":{"line":8,"column":11},"source":"home/work1.js","original":{"line":9,"column":13}},{"generated":{"line":8,"column":19},"source":"home/work1.js","original":{"line":9,"column":21}},{"name":"getElementById","generated":{"line":8,"column":20},"source":"home/work1.js","original":{"line":9,"column":22}},{"generated":{"line":8,"column":34},"source":"home/work1.js","original":{"line":9,"column":13}},{"generated":{"line":8,"column":35},"source":"home/work1.js","original":{"line":9,"column":37}},{"generated":{"line":8,"column":41},"source":"home/work1.js","original":{"line":9,"column":13}},{"generated":{"line":8,"column":42},"source":"home/work1.js","original":{"line":9,"column":0}},{"generated":{"line":8,"column":44},"source":"home/work1.js","original":{"line":11,"column":0}},{"generated":{"line":10,"column":0},"source":"home/work1.js","original":{"line":12,"column":0}},{"name":"map","generated":{"line":10,"column":9},"source":"home/work1.js","original":{"line":12,"column":9}},{"generated":{"line":10,"column":12},"source":"home/work1.js","original":{"line":12,"column":0}},{"name":"list","generated":{"line":10,"column":13},"source":"home/work1.js","original":{"line":12,"column":13}},{"generated":{"line":10,"column":17},"source":"home/work1.js","original":{"line":12,"column":0}},{"name":"fn","generated":{"line":10,"column":19},"source":"home/work1.js","original":{"line":12,"column":19}},{"generated":{"line":10,"column":21},"source":"home/work1.js","original":{"line":12,"column":0}},{"generated":{"line":10,"column":23},"source":"home/work1.js","original":{"line":12,"column":23}},{"generated":{"line":10,"column":24},"source":"home/work1.js","original":{"line":13,"column":2}},{"generated":{"line":11,"column":0},"source":"home/work1.js","original":{"line":14,"column":1}}],"sources":{"home/work1.js":"// 1. Написать функцию map, которая будет принимать в качестве\n// аргумента массив arr и функцию, которая в свою очередь будет\n// осуществлять преобразование каждого элемента массива в вид\n// \"<li class=\"list-group-item\">Tom</li>\"\n// 2. Вывести элементы трансформированного массива в ul с id=\"list\"\n// Вывод должен осуществляться в отсортированном по алфавиту виде\n\nlet arr = [\"Tom\", \"Steve\", \"Bill\", \"Rita\", \"Pete\", \"Ashley\"];\nconst list = document.getElementById(\"list\");\n\n// Сигнатура map\nfunction map(list, fn) {\n  // todo\n}\n"},"lineCount":null}},"error":null,"hash":"9d870979e33d0e13dbcf2c62300fd12d","cacheData":{"env":{}}}